#include <water_simulation.hpp>

#include <catch.hpp>

#include <sstream>

TEST_CASE("Water Simulation")
{
    SECTION("Vec 2")
    {
        Vec2 v(22, 33);
        CHECK(v.x == 22);
        CHECK(v.y == 33);

        CHECK(v == Vec2(22, 33));
        CHECK_FALSE(v == Vec2(22, 44));
        CHECK_FALSE(v == Vec2(11, 33));
        CHECK_FALSE(v == Vec2(44, 11));

        CHECK(std::hash<Vec2>{}(v) == 0x160021);
    }

    char const sample_input[] = "x=495, y=2..7" "\n"
                                "y=7, x=495..501" "\n"
                                "x=501, y=3..7" "\n"
                                "x=498, y=2..4" "\n"
                                "x=506, y=1..2" "\n"
                                "x=498, y=10..13" "\n"
                                "x=504, y=10..13" "\n"
                                "y=13, x=498..504" "\n";
    SECTION("Parse Input")
    {
        auto const [limits, field, source, vfield] = parseInput(sample_input);

        //   44444455555555
        //   99999900000000
        //   45678901234567
        // 0 ......+.......
        // 1 ............#.
        // 2 .#..#.......#.
        // 3 .#..#..#......
        // 4 .#..#..#......
        // 5 .#.....#......
        // 6 .#.....#......
        // 7 .#######......
        // 8 ..............
        // 9 ..............
        // 10 ....#.....#...
        // 11 ....#.....#...
        // 12 ....#.....#...
        // 13 ....#######...
        CHECK(field.size() == 34);
        CHECK(field.find(Vec2(498, 1)) == end(field));
        CHECK(field.find(Vec2(498, 2))->second == Field::Clay);
        CHECK(field.find(Vec2(498, 3))->second == Field::Clay);
        CHECK(field.find(Vec2(498, 4))->second == Field::Clay);
        CHECK(field.find(Vec2(498, 5)) == end(field));

        CHECK(limits.min.x == 493);
        CHECK(limits.max.x == 508);
        CHECK(limits.min.y == 0);
        CHECK(limits.max.y == 13);

        CHECK(source == Vec2(500, 0));

        CHECK(vfield.size() == 16 * 14);
    }

    SECTION("Printing")
    {
        auto const sim = parseInput(sample_input);
        std::stringstream sstr;
        sstr << sim;
        INFO(sim);
        CHECK(sstr.str() == ".......+........" "\n"
                            ".............#.." "\n"
                            "..#..#.......#.." "\n"
                            "..#..#..#......." "\n"
                            "..#..#..#......." "\n"
                            "..#.....#......." "\n"
                            "..#.....#......." "\n"
                            "..#######......." "\n"
                            "................" "\n"
                            "................" "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#######...." "\n");
    }

    SECTION("Spawn Water")
    {
        // ......+.......
        // ......|.....#.
        // .#..#.|.....#.
        // .#..#.|#......
        // .#..#.|#......
        // .#....|#......
        // .#~~~~~#......
        // .#######......
        // ..............
        // ..............
        // ....#.....#...
        // ....#.....#...
        // ....#.....#...
        // ....#######...
        auto sim = parseInput(sample_input);
        std::stringstream sstr;
        CHECK(spawnWater(sim));
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#.|.....#.." "\n"
                            "..#..#.|#......." "\n"
                            "..#..#.|#......." "\n"
                            "..#....|#......." "\n"
                            "..#~||||#......." "\n"
                            "..#######......." "\n"
                            "................" "\n"
                            "................" "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#######...." "\n");
        sstr.str(std::string());

        CHECK(spawnWater(sim));
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#.|.....#.." "\n"
                            "..#..#.|#......." "\n"
                            "..#..#.|#......." "\n"
                            "..#....|#......." "\n"
                            "..#~~|||#......." "\n"
                            "..#######......." "\n"
                            "................" "\n"
                            "................" "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#######...." "\n");
        sstr.str(std::string());

        CHECK(spawnWater(sim));
        CHECK(spawnWater(sim));
        CHECK(spawnWater(sim));
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#.|.....#.." "\n"
                            "..#..#.|#......." "\n"
                            "..#..#.|#......." "\n"
                            "..#....|#......." "\n"
                            "..#~~~~~#......." "\n"
                            "..#######......." "\n"
                            "................" "\n"
                            "................" "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#######...." "\n");
        sstr.str(std::string());

        CHECK(spawnWater(sim));
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#.|.....#.." "\n"
                            "..#..#.|#......." "\n"
                            "..#..#.|#......." "\n"
                            "..#~||||#......." "\n"
                            "..#~~~~~#......." "\n"
                            "..#######......." "\n"
                            "................" "\n"
                            "................" "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#######...." "\n");
        sstr.str(std::string());

        for(int i=0; i<8; ++i) {
            CHECK(spawnWater(sim));
        }
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#.|.....#.." "\n"
                            "..#..#~~#......." "\n"
                            "..#..#~~#......." "\n"
                            "..#~~~~~#......." "\n"
                            "..#~~~~~#......." "\n"
                            "..#######......." "\n"
                            "................" "\n"
                            "................" "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#.....#...." "\n"
                            ".....#######...." "\n");
        sstr.str(std::string());

        CHECK(spawnWater(sim));
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#||||...#.." "\n"
                            "..#..#~~#|......" "\n"
                            "..#..#~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#######|......" "\n"
                            ".........|......" "\n"
                            ".........|......" "\n"
                            ".....#...|.#...." "\n"
                            ".....#...|.#...." "\n"
                            ".....#~||||#...." "\n"
                            ".....#######...." "\n");
        sstr.str(std::string());

        for(int i=0; i<3; ++i) {
            CHECK(spawnWater(sim));
        }
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#||||...#.." "\n"
                            "..#..#~~#|......" "\n"
                            "..#..#~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#######|......" "\n"
                            ".........|......" "\n"
                            ".........|......" "\n"
                            ".....#...|.#...." "\n"
                            ".....#...|.#...." "\n"
                            ".....#~~~|~#...." "\n"
                            ".....#######...." "\n");
        sstr.str(std::string());

        CHECK(spawnWater(sim));
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#||||...#.." "\n"
                            "..#..#~~#|......" "\n"
                            "..#..#~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#######|......" "\n"
                            ".........|......" "\n"
                            ".........|......" "\n"
                            ".....#...|.#...." "\n"
                            ".....#...|.#...." "\n"
                            ".....#~~~~~#...." "\n"
                            ".....#######...." "\n");
        sstr.str(std::string());

        for(int i=0; i<10; ++i) {
            CHECK(spawnWater(sim));
        }
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#||||...#.." "\n"
                            "..#..#~~#|......" "\n"
                            "..#..#~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#######|......" "\n"
                            ".........|......" "\n"
                            ".........|......" "\n"
                            ".....#~~~~~#...." "\n"
                            ".....#~~~~~#...." "\n"
                            ".....#~~~~~#...." "\n"
                            ".....#######...." "\n");
        sstr.str(std::string());

        CHECK(!spawnWater(sim));
        INFO(sim);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#||||...#.." "\n"
                            "..#..#~~#|......" "\n"
                            "..#..#~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#######|......" "\n"
                            ".........|......" "\n"
                            "....|||||||||..." "\n"
                            "....|#~~~~~#|..." "\n"
                            "....|#~~~~~#|..." "\n"
                            "....|#~~~~~#|..." "\n"
                            "....|#######|..." "\n");
        sstr.str(std::string());
    }

    SECTION("Simulate Flow")
    {
        auto sim = parseInput(sample_input);
        std::stringstream sstr;
        auto const count = simulateFlow(sim);
        INFO(sim);
        CHECK(count == 57);
        sstr << sim;
        CHECK(sstr.str() == ".......+........" "\n"
                            ".......|.....#.." "\n"
                            "..#..#||||...#.." "\n"
                            "..#..#~~#|......" "\n"
                            "..#..#~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#~~~~~#|......" "\n"
                            "..#######|......" "\n"
                            ".........|......" "\n"
                            "....|||||||||..." "\n"
                            "....|#~~~~~#|..." "\n"
                            "....|#~~~~~#|..." "\n"
                            "....|#~~~~~#|..." "\n"
                            "....|#######|..." "\n");
    }
}
